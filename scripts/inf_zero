#!/bin/bash

export PYTHONPATH=.

algos=(
    happo
)
suite=$1
shift
# envs=(escalation staghunt harvest)
envs=(
    HalfCheetah_2x3
)
# e=${suite}
configs=(
    "${suite}"
)
na=2
args1=(None)
args2=(300 400 300 400 300 400 300 400)
args3=(10 10 10 10 10 10 10 10 10 10 10 10)
date=$(date +"%m%d")
info=(
    ""
    "so"
)
ld="${suite}-logs"
# gpus=$(nvidia-smi -L | wc -l)
# for x in $(seq 1 1); do
#     shift
# done

if [ -z "$info" ]; then
    n=$date
else
    n="$date-$info"
fi

# INF_MAC_NODE_RANK=$1
le=${#envs[@]}
idx=$(($INF_MAC_NODE_RANK % $le))
e=${envs[$idx]}
env="${suite}-${e}"
lc=${#configs[@]}
idx=$(($INF_MAC_NODE_RANK % $lc))
config=${configs[$idx]}
la=${#algos[@]}
idx=$(($INF_MAC_NODE_RANK % $la))
a=${algos[$idx]}
la1=${#args1[@]}
idx=$(($INF_MAC_NODE_RANK % $la1))
a1=${args1[$idx]}
la2=${#args2[@]}
idx=$(($INF_MAC_NODE_RANK % $la2))
a2=${args2[$idx]}
la3=${#args3[@]}
idx=$(($INF_MAC_NODE_RANK % $la3))
a3=${args3[$idx]}
# kws="n_imaginary_runs=$a1 n_imaginary_envs=$a2 n_imaginary_steps=$a3"
# kws=$@

# for a in "${algos[@]}"; do
for s in {0..5}; do
    py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -s $s -na $na -kw $kws &"
    echo $py_script
    eval $py_script
done
nn="${n}_so"
for s in {0..5}; do
    py_script="python run/train.py -a ${a} -e $env -c ${config}_so -ld $ld -n $nn -s $s -na $na -kw $kws &"
    echo $py_script
    eval $py_script
done
# done
# for config in "${configs[@]}"; do
#     for s in {0..5}; do
#         # echo $kws
#         if [[ "$OSTYPE" == 'linux-gnu'* ]]; then
#             gpus=$(nvidia-smi -L | wc -l)
#             gpu=$(($i % $gpus))
#             py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -s $s --gpu $gpu -na $na -kw $kws &"
#         else
#             py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -s $s -na $na -kw $kws &"
#         fi
#         echo $py_script
#         eval $py_script
#         ((i=(i+1) ))
#     done
# done
wait
echo "Script completed"
# for e in "${envs[@]}"; do
# le=${#envs[@]}
# idx=$(($INF_MAC_NODE_RANK % $le))
# e=${envs[$idx]}
# lc=${#configs[@]}
# idx=$(($INF_MAC_NODE_RANK % $lc))
# config=${configs[$idx]}
# la1=${#args1[@]}
# idx=$(($INF_MAC_NODE_RANK % $la1))
# a1=${args1[$idx]}
# la2=${#args2[@]}
# idx=$(($INF_MAC_NODE_RANK % $la2))
# a2=${args2[$idx]}
# la3=${#args3[@]}
# idx=$(($INF_MAC_NODE_RANK % $la3))
# a3=${args3[$idx]}
# if [[ "${suite}" == "mpe" ]]; then
#     na=3
# else
#     na=2
# fi
# for a in "${algos[@]}"; do
#     for s in {0..9}; do
#         kws="n_imaginary_runs=$a1"
#         # echo $kws
#         env="${suite}-${e}"
#         if [[ "$OSTYPE" == 'linux-gnu'* ]]; then
#             gpu=$(($i % $gpus))
#             py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -s $s --gpu $gpu -na $na -kw $kws &"
#         else
#             py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -s $s -na $na -kw $kws &"
#         fi
#         echo $py_script
#         eval $py_script
#         ((i=(i+1) ))
#     done
#     # wait
# done
# wait
# echo "Script completed"