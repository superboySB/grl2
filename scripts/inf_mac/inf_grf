#!/bin/bash

export PYTHONPATH=.

suite=grf
algos=(
  # sync-ppo
  ppo
)
envs=(
  academy_counterattack_hard
  academy_3_vs_1_with_keeper
  academy_pass_and_shoot_with_keeper
  academy_run_pass_and_shoot_with_keeper
  # academy_corner
  # academy_counterattack_hard
  # academy_custom_counterattack_hard
)
shift
configs=(
  grf_rnn
)
# shift
args1=(
  1
  1
  1
  1
  2
  2
  2
  2
)
args2=(
  shared
  shared
  shared
  shared
  sum
  sum
  sum
  sum
)
args3=(
  None
  None
  layer
  layer
)
args4=(
  .2
)
date=$(date +"%m%d")
info="orig_env"
ld="${suite}-logs"

if [ -z "$info" ]; then
  n=$date
else
  n="$date-$info"
fi

le=${#envs[@]}
idx=$(($INF_MAC_NODE_RANK % $le))
e=${envs[$idx]}
env="${suite}-${e}"
lc=${#configs[@]}
idx=$(($INF_MAC_NODE_RANK % $lc))
config=${configs[$idx]}
la=${#algos[@]}
idx=$(($INF_MAC_NODE_RANK % $la))
a=${algos[$idx]}
la1=${#args1[@]}
idx=$(($INF_MAC_NODE_RANK % $la1))
a1=${args1[$idx]}
la2=${#args2[@]}
idx=$(($INF_MAC_NODE_RANK % $la2))
a2=${args2[$idx]}
la3=${#args3[@]}
idx=$(($INF_MAC_NODE_RANK % $la3))
a3=${args3[$idx]}
la4=${#args4[@]}
idx=$(($INF_MAC_NODE_RANK % $la4))
a4=${args4[$idx]}
# kws=$@

commands=()
kws=$@
# for e in "${envs[@]}"; do
# for a1 in "${args1[@]}"; do
# kws="$@ entropy_coef=$a1"
# i=$(($INF_MAC_NODE_RANK % 2))
# if [ "$i" -eq 0 ]; then
#   for s in {0..4}; do
#     py_script="python run/train.py -a $a $dynamics -e $env -c $config -ld $ld -n $n -te train_grf -kw $kws -s $s"
#     commands+=("$py_script")
#     echo $py_script
#   done
# else
#   for s in {5..9}; do
#     py_script="python run/train.py -a $a $dynamics -e $env -c $config -ld $ld -n $n -te train_grf -kw $kws -s $s"
#     commands+=("$py_script")
#     echo $py_script
#   done
# fi
kws="n_epochs=15 n_mbs=2 normalize_reward=True"
for a in "${algos[@]}"; do
# for e in "${envs[@]}"; do
  env="${suite}-${e}"
  for s in {0..4}; do
    py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
    commands+=("$py_script")
    echo $py_script
  done
done
# done
printf '%s\n' "${commands[@]}" | xargs -I COMMAND -P 5 -L 1 bash -c COMMAND 
echo "Script completed"
