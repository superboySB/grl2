#!/bin/bash

export PYTHONPATH=.

algos=(
    happo_mb
)
suite=$1
shift
envs=(
    # $1
    # escalation
    # escalation
    escalation
    # escalation
    # staghunt
    # staghunt
)
configs=(
    "${suite}"
)
args1=(
    $1
    200
    200
    150
    150
    100
    100
    50
    50
    # 640
    # 640
    # 1280
    # 1280
)
args2=(
    $2
    True
    False
)
args3=(
    discrete
    continuous
    discrete
    continuous
    discrete
    continuous
)
args4=(
    None
    None
    None
    None
    1e-6
    1e-6
)
dynamics=(
    # "dynamics_tx"
    "dynamics"
)
date=$(date +"%m%d")
# date="0401"
info=""
ld="${suite}-logs"
gpus=$(nvidia-smi -L | wc -l)
# for x in $(seq 1 1); do
#     shift
# done

if [ -z "$info" ]; then
    n=$date
else
    n="$date-$info"
fi

# INF_MAC_NODE_RANK=$1
le=${#envs[@]}
idx=$(($INF_MAC_NODE_RANK % $le))
e=${envs[$idx]}
env="${suite}-${e}"
lc=${#configs[@]}
idx=$(($INF_MAC_NODE_RANK % $lc))
config=${configs[$idx]}
la=${#algos[@]}
idx=$(($INF_MAC_NODE_RANK % $la))
a=${algos[$idx]}
ldy=${#dynamics[@]}
idx=$(($INF_MAC_NODE_RANK % $ldy))
d=${dynamics[$idx]}
la1=${#args1[@]}
idx=$(($INF_MAC_NODE_RANK % $la1))
a1=${args1[$idx]}
la2=${#args2[@]}
idx=$(($INF_MAC_NODE_RANK % $la2))
a2=${args2[$idx]}
la3=${#args3[@]}
idx=$(($INF_MAC_NODE_RANK % $la3))
a3=${args3[$idx]}

commands=()
# for a1 in "${args1[@]}"; do
# for a2 in "${args2[@]}"; do
# kws="0#n_epochs=$1"
# kws="0#dynamics_name=$d"
# kws="0#norm_adv=False 0#n_simulated_envs=$a1 0#n_simulated_steps=$a2"
kws="0#norm_adv=False 1#n_epochs=$a1 1#deterministic_trans=$a2"
# for e in "${envs[@]}"; do
config="${e}"
env="${suite}-${e}"
for s in {0..15}; do
    py_script="python run/train.py -a ${a} $d -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
    commands+=("$py_script")
    echo $py_script
done
# done
# config="${e}"
# env="${suite}-${e}"
# for s in {0..15}; do
#     py_script="python run/train.py -a ${a} $d -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
#     commands+=("$py_script")
#     echo $py_script
# done
printf '%s\n' "${commands[@]}" | xargs -I COMMAND -P 16 -L 1 bash -c COMMAND
echo "Script completed"
