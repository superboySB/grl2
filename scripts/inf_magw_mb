#!/bin/bash

export PYTHONPATH=.

algos=(
    happo_mb
)
suite=$1
shift
envs=(
    # $1
    # escalation
    # escalation
    # escalation
    # escalation
    staghunt
    # staghunt
)
configs=(
    "${suite}"
)
args1=(
    256,256
    256,256
    128,128
    128,128
)
args2=(
    64,64
    128,128
    64,64
    128,128
    # 5e-4
)
args3=(
    discrete
    continuous
    discrete
    continuous
    discrete
    continuous
)
args4=(
    None
    None
    None
    None
    1e-6
    1e-6
)
dynamics=(
    # "dynamics_tx"
    "dynamics"
)
date=$(date +"%m%d")
info=""
ld="${suite}-logs"
gpus=$(nvidia-smi -L | wc -l)
# for x in $(seq 1 1); do
#     shift
# done

if [ -z "$info" ]; then
    n=$date
else
    n="$date-$info"
fi

# INF_MAC_NODE_RANK=$1
le=${#envs[@]}
idx=$(($INF_MAC_NODE_RANK % $le))
e=${envs[$idx]}
env="${suite}-${e}"
lc=${#configs[@]}
idx=$(($INF_MAC_NODE_RANK % $lc))
config=${configs[$idx]}
la=${#algos[@]}
idx=$(($INF_MAC_NODE_RANK % $la))
a=${algos[$idx]}
ldy=${#dynamics[@]}
idx=$(($INF_MAC_NODE_RANK % $ldy))
d=${dynamics[$idx]}
la1=${#args1[@]}
idx=$(($INF_MAC_NODE_RANK % $la1))
a1=${args1[$idx]}
la2=${#args2[@]}
idx=$(($INF_MAC_NODE_RANK % $la2))
a2=${args2[$idx]}
la3=${#args3[@]}
idx=$(($INF_MAC_NODE_RANK % $la3))
a3=${args3[$idx]}

commands=()
# for a1 in "${args1[@]}"; do
# for a2 in "${args2[@]}"; do
kws="0#n_epochs=$1"
# kws="0#dynamics_name=$d"
    # for e in "${envs[@]}"; do
env="${suite}-${e}"
config="${e}"
for s in {0..9}; do
    py_script="python run/train.py -a ${a} $d -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
    commands+=("$py_script")
    echo $py_script
    # eval $py_script
done
#     done
# done
# done
# echo ${commands[@]}s
lc=${#commands[@]}
p=$((lc / le))
# echo $p
printf '%s\n' "${commands[@]}" | xargs -I COMMAND -P 16 -L 1 bash -c COMMAND
echo "Script completed"
