#!/bin/bash

export PYTHONPATH=.

suite=$1
shift
algos=(
    # happo
    happo_lka2
)
envs=(
    # $1
    Ant_2x4
    HalfCheetah_2x3
    Walker2d_2x3
)
configs=(
    "${suite}"
)
shift
args1=(
    # $2
    full
    part
)
args2=(
    False
    False
)
args3=(
    True
    False
)
args4=(
    1
    .5
    # .1
)
date=$(date +"%m%d")
# date="0331"
info=""
ld="${suite}-logs"
gpus=$(nvidia-smi -L | wc -l)

if [ -z "$info" ]; then
    n=$date
else
    n="$date-$info"
fi

# INF_MAC_NODE_RANK=$1
le=${#envs[@]}
idx=$(($INF_MAC_NODE_RANK % $le))
e=${envs[$idx]}
env="${suite}-${e}"
lc=${#configs[@]}
idx=$(($INF_MAC_NODE_RANK % $lc))
config=${configs[$idx]}
la=${#algos[@]}
idx=$(($INF_MAC_NODE_RANK % $la))
a=${algos[$idx]}
la1=${#args1[@]}
idx=$(($INF_MAC_NODE_RANK % $la1))
a1=${args1[$idx]}
la2=${#args2[@]}
idx=$(($INF_MAC_NODE_RANK % $la2))
a2=${args2[$idx]}
la3=${#args3[@]}
idx=$(($INF_MAC_NODE_RANK % $la3))
a3=${args3[$idx]}

commands=()
# for a1 in "${args1[@]}"; do
# for a2 in "${args2[@]}"; do
#     for a3 in "${args3[@]}"; do
#         for a4 in "${args4[@]}"; do
#         # for e in "${envs[@]}"; do
#             kws="0#norm_adv=$a1 0#reg_type=$a2 0#rescaled_by_adv=$a3 0#pos_reg_coef=$a4"
#             env="${suite}-${e}"
#             for s in {0..4}; do
#                 py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
#                 commands+=("$py_script")
#                 echo $py_script
#                 # eval $py_script
#             done
#         done
#     done
# done
# done
a="happo"
env="${suite}-${e}"
# for a in "${algos[@]}"; do
for e in "${envs[@]}"; do
    for s in {0..4}; do
        py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
        commands+=("$py_script")
        echo $py_script
        # eval $py_script
    done
done
# a="happo_lka2"
# kws="lka_reg_type=$1 pos_lka_reg_coef=$2"
# env="${suite}-${e}"
# for a in "${algos[@]}"; do
# for e in "${envs[@]}"; do
#     env="${suite}-${e}"
#     kws="rollout_type=part"
#     for s in {0..4}; do
#         py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
#         commands+=("$py_script")
#         echo $py_script
#         # eval $py_script
#     done
# done
# done
printf '%s\n' "${commands[@]}" | xargs -I COMMAND -P 16 -L 1 bash -c COMMAND
echo "Script completed"
