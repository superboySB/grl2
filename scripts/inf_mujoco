#!/bin/bash

export PYTHONPATH=.

suite=mujoco
algos=(
  ppo
)
# shift
envs=(
  # $1
  Ant
  HalfCheetah
  Walker2d
)
configs=(
  "${suite}"
)
# shift
args1=(
  0
  11
  21
)
args2=(
  1
)
args3=(
  True
  False
)
args4=(
  1
  .5
  # .1
)
date=$(date +"%m%d")
info=""
ld="${suite}-logs"
gpus=$(nvidia-smi -L | wc -l)

if [ -z "$info" ]; then
    n=$date
else
    n="$date-$info"
fi

# INF_MAC_NODE_RANK=$1
# le=${#envs[@]}
# idx=$(($INF_MAC_NODE_RANK % $le))
# e=${envs[$idx]}
# env="${suite}-${e}"
# lc=${#configs[@]}
# idx=$(($INF_MAC_NODE_RANK % $lc))
# config=${configs[$idx]}
# la=${#algos[@]}
# idx=$(($INF_MAC_NODE_RANK % $la))
# a=${algos[$idx]}
# la1=${#args1[@]}
# idx=$(($INF_MAC_NODE_RANK % $la1))
# a1=${args1[$idx]}
# la2=${#args2[@]}
# idx=$(($INF_MAC_NODE_RANK % $la2))
# a2=${args2[$idx]}
# la3=${#args3[@]}
# idx=$(($INF_MAC_NODE_RANK % $la3))
# a3=${args3[$idx]}

commands=()
# kws=$@
# for a in "${algos[@]}"; do
#     for e in "${envs[@]}"; do
#         env="${suite}-${e}"
#         for a1 in "${args1[@]}"; do
#             for a2 in "${args2[@]}"; do
#                 for a3 in "${args3[@]}"; do
#                     kws="sample_reg_type=$a1 sample_reg_coef=$a2 rescaled_by_adv=$a3"
#                     for s in {0..4}; do
#                         py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
#                         commands+=("$py_script")
#                         echo $py_script
#                     done
#                 done
#             done
#         done
#     done
# done
i=0
for a in "${algos[@]}"; do
  for e in "${envs[@]}"; do
    env="${suite}-${e}"
    for a1 in "${args1[@]}"; do
      for s in {0..3}; do
        # gpus=$(nvidia-smi -L | wc -l)
        # gpu=$(($i % $gpus))
        kws="n_bins=$a1"
        # py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -kw $kws -s $s --gpu $gpu &"
        py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -kw $kws -s $s"
        commands+=("$py_script")
        echo $py_script
        # eval $py_script
        # sleep 5s
        ((i=(i+1) ))
      done
    done
  done
done
printf '%s\n' "${commands[@]}" | xargs -I COMMAND -P 16 -L 1 bash -c COMMAND
echo "Script completed"
