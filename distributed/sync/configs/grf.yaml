---
algorithm: &algo happo
name: happo
info: happo

precision: 32

n_agents: 1

# model path: root_dir/model_name/name
# tensorboard path: root_dir/model_name/logs
# the following names are just examples; they will be re-specified in the entry point
root_dir: *algo
model_name: *algo

controller:
    store_period: 1e6
    restart_runners_priod: null
    max_version_iterations: 1
    max_steps_per_iteration: 2e8
    initialize_rms: &irms True

parameter_server:
    root_dir: *algo
    model_name: *algo

    train_from_scratch_frac: 1
    online_frac: .2

    payoff:
        step_size: 1e-2     # step size towards the most recent data, 0 or null average payoff over the entire history
        update_interval: 180
        sampling_strategy:
            type: pfsp
            p: 1

    # rule_strategies:
    #     # agent name / config
    #     random:
    #         aid: 1
    #         vid: 1
    #         path: rule/random   # path to the file that defines Strategy
    #         # other configs

ray_config:
    runner:
        num_cpus: 1
    agent:
        num_gpus: 1

monitor: {}

runner:
    n_runners: &nrunners 2
    n_steps: &nsteps 64
    push_every_episode: False

env:
    env_name: &env_name grf-11_vs_11_hard_stochastic
    representation: simple115v2
    rewards: scoring,checkpoints
    render: False
    write_full_episode_dumps: False
    write_video: False
    dump_frequency: 1000
    logdir: results/grf
    extra_players: null
    number_of_left_players_agent_controls: 11
    number_of_right_players_agent_controls: 0
    add_role_to_obs: False
    shared_ckpt_reward: False

    max_episode_steps: 3000
    use_action_mask: False
    uid2aid: null

    n_envs: &nenvs 1

    use_idx: False
    use_hidden: False
    use_event: False
    agentwise_global_state: False
    timeout_done: &td True

agent: {}

strategy:
    algorithm: *algo
    train_loop: {}

model:
    aid: 0
    gamma: &gamma .995

    policy:
        nn_id: policy
        units_list: [256, 256, 256]
        w_init: orthogonal
        activation: relu
        norm: layer
        out_scale: .01
        rnn_type: null
        rnn_units: 256
    value:
        nn_id: value
        units_list: [256, 256, 256]
        w_init: orthogonal
        activation: relu
        norm: layer
        rnn_type: null
        rnn_units: 256

loss:
    # hyperparams for value target and advantage
    target_type: gae
    c_clip: 1
    rho_clip: 1
    adv_type: gae
    norm_adv: True

    prnn_bptt: 64
    vrnn_bptt: 64

    lka_prnn_bptt: 64
    lka_vrnn_bptt: 64

    # hyperparams for policy optimization
    pg_type: ppo
    ppo_clip_range: .2
    kl_type: reverse
    kl_coef: 0
    policy_sample_mask: True

    # hyperparams for value learning
    value_loss: clip
    value_clip_range: .2
    value_sample_mask: False

    stats:
        gamma: *gamma
        lam: &lam .95
        pg_coef: 1
        entropy_coef: 5e-4
        value_coef: 1

trainer:
    algorithm: *algo
    aid: 0
    n_runners: *nrunners
    n_envs: *nenvs
    n_epochs: &nepochs 5
    n_mbs: &nmbs 1
    n_steps: *nsteps
    update_scheme: step

    n_simulated_envs: *nse
    n_simulated_steps: *nss
    n_lka_epochs: *nepochs
    n_lka_mbs: *nmbs

    theta_opt:
        opt_name: adam
        lr: 1e-4
        clip_norm: .5
        eps: 1e-5

actor:
    update_obs_rms_at_execution: False
    update_obs_at_execution: False
    rms:
        obs_names: [obs, global_state]
        obs_normalized_axis: [0, 1, 2]
        reward_normalized_axis: [0, 1, 2]
        normalize_obs: False
        obs_clip: 10
        normalize_reward: False
        update_reward_rms_in_time: False
        gamma: *gamma

buffer:
    type: ac

    n_runners: *nrunners
    n_envs: *nenvs
    n_steps: *nsteps
    queue_size: 2
    timeout_done: *td

    gamma: *gamma
    lam: *lam

    sample_keys: 
        - obs
        - global_state
        - action
        - value
        - reward
        - discount
        - reset
        - mu_logprob
        - mu_logits
        - state_reset
        - state
