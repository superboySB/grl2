#!/bin/zsh

source activate grl

# algos=(
#     $1
# )
# suite=grf
# envs=(
#     11_vs_11_hard_stochastic
# )
# config=$2
# for x in $(seq 1 2); do
#     shift
# done
# seed=2
# args1=(None)
# args2=(1)
# args3=(True)
# args4=(.2)
# date=$(date +"%m%d")

# i=0
# j=1
# for e in "${envs[@]}"; do
#     for a in "${algos[@]}"; do
#         for a1 in "${args1[@]}"; do
#             for a2 in "${args2[@]}"; do
#                 for a3 in "${args3[@]}"; do
#                     for a4 in "${args4[@]}"; do
#                         for seed in "${seeds[@]}"; do
#                             # kw1="ppo_clip_range=$a1"
#                             # kw2="kl_prior_coef=$a2"
#                             # kw3="approx_kl=$a3"
#                             # kw4="pr_upper_clip=$a4"
#                             # kws="$kw1-$kw2-$kw3"
#                             env="${suite}-${e}"
#                             n="$date"
#                             ld="logs-$suite"
#                             gpus=$(nvidia-smi -L | wc -l)
#                             gpu=$(($seed % $gpus))
#                             # dir="$ld/$env/$a/$n-$kws-seed=$seed"
#                             # mkdir -p $dir
#                             # py_script="train ${a} -e ${suite}_${e} -kw distribution_mode=hard >& ${dir}/outputs.txt"
#                             # py_script="python run/train.py -a ${a} -e $env -c $config -kw $kw1 $kw2 $kw3 -ld $ld --gpu $seed -n $n -s $seed | tee ${dir}/outputs.txt &"
#                             # py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld --gpu $seed -n $n -s $seed | tee ${dir}/outputs.txt &"
#                             py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld --gpu $gpu -n $n -s $seed $@ 2> ${dir}/err.txt | tee -a ${dir}/out.txt > /dev/null &"
#                             echo $py_script
#                             eval $py_script
#                             sleep 1
#                         done
#                     done
#                 done
#             done
#         done
#     done
# done

# kws="$@"
# shift
# kw1=""
# kwstr="$kw1"
# kws="$kws $kw1"
# for item in $@; do
#     if [ -z != $kwstr ]; then
#         kwstr="$item-$kwstr"
#     else
#         kwstr="$item"
#     fi
# done

# for e in "${envs[@]}"; do
#     for a in "${algos[@]}"; do
#         for ((s=1; s<=$seed; s++)); do
#             env="${suite}-${e}"
#             n="$date"
#             ld="$suite-logs"
#             if [ 0 != $# ]; then
#                 dir="$ld/$env/$a/$n-$kwstr/seed=$s"
#             else
#                 dir="$ld/$env/$a/$n/seed=$s"
#             fi
#             mkdir -p $dir
#             gpus=$(nvidia-smi -L | wc -l)
#             gpu=$((($s-1) % $gpus))
#             # gpu=1
#             py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld --gpu $gpu -n $n -s $s $kws 2> ${dir}/err.txt | tee -a ${dir}/out.txt > /dev/null &"
#             echo $py_script
#             eval $py_script
#             sleep 3
#         done
#     done
# done

./start sync-zero grf academy_3_vs_1_with_keeper grf_3v1 0 -kw $@ clip_norm=.5
./start sync-zero grf academy_3_vs_1_with_keeper grf_3v1 1 -kw $@ clip_norm=10
# ./start sync-zero grf academy_3_vs_1_with_keeper grf_3v1 1 -kw $@ norm_meta_adv=False
# sleep 5h
# ./startn sync-zero grf academy_3_vs_1_with_keeper grf_3v1 1 -kw K=1 meta_reward_opt:lr=3e-4 rl_reward=interpolated reward_coef:init=4.6
# ./startn sync-zero grf academy_3_vs_1_with_keeper grf_3v1 1 -kw K=5 meta_reward_opt:lr=3e-4 rl_reward=interpolated reward_coef:init=4.6
