---
algorithm: &algo ppo
name: ppo

precision: 32

# model path: root_dir/model_name/name
# tensorboard path: root_dir/model_name/logs
# the following names are just examples; they will be re-specified in the entry point
root_dir: *algo
model_name: *algo

routine:
    algorithm: *algo

    MAX_STEPS: 1e10
    n_steps: &nsteps 64
    LOG_PERIOD: 100
    EVAL_PERIOD: 100

    RECORD_VIDEO: False
    N_EVAL_EPISODES: 1

env:
    env_name: &env_name BipedalWalker-v3
    n_runners: &nrunners 1
    n_envs: &nenvs 64
    seed: 0
    reward_min: -1
    reward_max: null
    timeout_done: True

agent: {}

strategy:
    train_loop:
        use_dataset: &dataset False
        n_epochs: &nepochs 4
        n_mbs: &nmbs 4
        n_aux_epochs: &naepochs 9
        n_pi: &npi 16
        n_segs: &nsegs 16
        n_aux_mbs_per_seg: &nambs 2
        max_kl: 0            # early stop when max_kl is violated. 0 or null suggests unbound

        # (once reuse null)
        # "once" updates values at the end of each epoch
        # "reuse" updates values using value from train which is staler than once
        # null doesn't update values.
        value_update: null

model:
    rnn_type: &rnn null
    sample_size: &ss 16
    encoder: 
        nn_id: mlp
        units_list: []
        activation: tanh
    policy:
        nn_id: policy
        units_list: [256, 256]
        kernel_initializer: orthogonal
        activation: tanh
        out_gain: .01
        init_std: 1
        norm: null
    value:
        nn_id: value
        units_list: [256, 256]
        kernel_initializer: orthogonal
        activation: tanh
        norm: null

loss:
    # arguments for loss
    value_loss: clip
    huber_threshold: 10
    clip_range: .2
    entropy_coef: 1e-3
    value_coef: 1

trainer:
    algorithm: *algo
    
    rnn_type: *rnn
    sample_size: *ss         # BPTT length
    store_state: True

    optimizer:
        opt_name: adam
        schedule_lr: False
        lr: 3e-4
        clip_norm: .5
        epsilon: 1.e-5

actor:
    rms:
        obs_names: [obs]
        normalize_obs: True
        normalize_reward: True
        update_reward_rms_in_time: False
        gamma: &gamma .99

buffer:
    type: ppo
    use_dataset: *dataset

    adv_type: gae     # nae or gae
    gamma: *gamma
    lam: .95
    n_runners: *nrunners
    n_envs: *nenvs
    n_steps: *nsteps
    n_epochs: *nepochs
    n_mbs: *nmbs        # number of minibatches
    rnn_type: *rnn
    norm_adv: minibatch

    sample_keys:
        - obs
        - action
        - reward
        - value
        - traj_ret
        - raw_adv
        - advantage
        - logprob
        - mask
        - h
        - c
