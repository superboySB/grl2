---
env:
    name: &env_name procgen_coinrun
    n_workers: 1
    n_envs: &nenvs 8
    seed: 0
    frame_skip: 2
    frame_stack: 4
    np_obs: True
    gray_scale: False

model:
    encoder: 
        cnn_name: impalase
        # obs_range: [-1, 1]
        # channels: [16, 32, 32, 64]
        # expansion_ratio: [4, 4, 4, 4]
        # reduction_ratio: 1
        # norm: null
        out_size: null
        kernel_initializer: orthogonal
        activation: relu
    actor:
        units_list: [512]
        init_std: 1
        norm: null
        kernel_initializer: orthogonal
        activation: relu
    critic:
        units_list: [512]
        norm: null
        kernel_initializer: orthogonal
        activation: relu

agent:
    algorithm: &algo ppo
    precision: 16

    MAX_STEPS: 8e8
    N_STEPS: &nsteps 256
    N_UPDATES: 4
    N_MBS: &nmbs 4
    LOG_PERIOD: 100
    EVAL_PERIOD: 500
    max_kl: 0            # early stop when max_kl is violated. 0 or null suggests unbound

    normalize_obs: False
    normalize_reward: True

    # model path: root_dir/model_name/models
    # tensorboard path: root_dir/model_name/logs
    # the following names are just examples; they will be reset in our training process
    root_dir: *algo                         # root path for tensorboard logs
    model_name: *algo
    RECORD: True
    
    # arguments for optimizer
    optimizer: adam
    schedule_lr: False
    lr: 5e-4
    clip_norm: 0
    opt_eps: 1e-5
    # arguments for loss
    clip_range: .2          # clip range for ppo
    entropy_coef: .01
    value_coef: .5

buffer:
    adv_type: gae     # nae or gae
    gamma: .99
    lam: .95
    n_envs: *nenvs
    N_STEPS: *nsteps
    N_MBS: *nmbs        # number of minibatches
    # mini-batch size = n_workers * n_envs * epslen / n_mbs
