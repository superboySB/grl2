---
algorithm: &algo zero
name: zero

precision: 32

# model path: root_dir/model_name/name
# tensorboard path: root_dir/model_name/logs
# the following names are just examples; they will be re-specified in the entry point
root_dir: *algo
model_name: *algo

routine:
    algorithm: *algo

    MAX_STEPS: 1e7
    n_steps: &nsteps 16
    LOG_PERIOD: 2e3
    EVAL_PERIOD: null

    RECORD_VIDEO: True
    N_EVAL_EPISODES: 1
    size: [256, 256]

env:
    env_name: &env_name sagw-tc
    n_runners: &nrunners 1
    n_envs: &nenvs 1
    step_penalty: 0
    max_episode_steps: 1e5
    flip_steps: 1e5

    to_multi_agent: True
    timeout_done: &td True
    life_long: True

agent: {}

strategy:
    algorithm: *algo
    train_loop: {}

model:
    aid: 0
    rnn_type: &rnn null
    gamma: &gamma .99

    encoder: 
        nn_id: null
    rnn:
        nn_id: *rnn
    policy:
        nn_id: policy
        units_list: [256, 256]
        # w_init: orthogonal
        activation: relu
        norm: null
        # out_scale: .01
    value:
        nn_id: value
        units_list: [256, 256]
        # w_init: orthogonal
        activation: relu
        norm: null

loss:
    # hyperparams for value target and advantage
    target_type: gae
    c_clip: 1
    rho_clip: 1
    adv_type: vtrace

    # hyperparams for policy optimization
    pg_type: pg
    ppo_clip_range: .2
    policy_life_mask: True

    # hyperparams for value learning
    value_loss: mse
    value_clip_range: .2
    value_life_mask: False

    stats:
        gamma: *gamma
        lam: .95
        pg_coef: 1
        entropy_coef: 0
        value_coef: .5

trainer:
    algorithm: *algo
    aid: 0
    n_runners: *nrunners
    n_envs: *nenvs
    n_epochs: &nepochs 1
    n_mbs: &nmbs 1
    n_steps: *nsteps         # BPTT length
    timeout_done: *td

    theta_opt:
        opt_name: sgd
        lr: .1

actor:
    update_obs_rms_at_execution: False
    update_obs_at_execution: False
    rms:
        obs_names: [obs, global_state]
        obs_normalized_axis: [0, 1, 2]
        reward_normalized_axis: [0, 1, 2]
        normalize_obs: False
        obs_clip: 10
        normalize_reward: False
        update_reward_rms_in_time: False
        gamma: *gamma

buffer:
    type: ac

    n_runners: *nrunners
    n_envs: *nenvs
    n_steps: *nsteps
    queue_size: 2
    timeout_done: *td
    rnn_type: *rnn

    sample_keys: 
        - obs
        - action
        - value
        - reward
        - discount
        - reset
        - mu_logprob
        - mu
        - mask
        - h
        - c
