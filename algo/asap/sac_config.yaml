---
env:
    name: Walker2d-v2
    video_path: video
    log_video: False
    n_envs: 1
    efficient_envvec: True
    seed: 0
model:
    actor:
        units_list: [256, 256]
        activation: relu
    q:
        units_list: [256, 256]
        activation: relu
    temperature:
        temp_type: 'variable'
        value: .01
agent:
    algorithm: &algo asap-sac
    gamma: &gamma 0.99
    sync_target: False
    target_update_freq: 100
    polyak: .995
    evaluation: False
    kl_coef: 1
    act_eps: 0
    
    # timer&interval
    MAX_STEPS: 4.e+7
    TIME_INTERVAL: 100
    LOG_INTERVAL: 100000
    timer: True

    # distributed algo params
    n_workers: 4

    # SAP params
    n_eval_envs: 1
    REPO_CAP: 10
    MIN_EVOLVE_MODELS: 2
    MAX_EVOLVE_MODELS: 10
    MIN_LEARN_PROB: .3
    MIN_EVOLVE_PROB: .3
    EVOLVE_LEARN_PROB: 0.5  # probability to further average evolved weights with the learned parameter
    REEVAL_PROB: .05    # this should be small as eval_times affects the UCB score
    FIFO: False
    WA_SELECTION: False
    WA_EVOLUTION: False
    fitness_method: lcb
    mode_polyak: 0
    cb_c: .1    # coefficient for confidence bound method

    # model path: root_dir/model_name/models
    # tensorboard path: root_dir/model_name/logs
    # the following names are just examples; they will be reset in our training process
    root_dir: *algo                         # root path for tensorboard logs
    model_name: *algo

    loss_type: mse                          # huber or mse
    tbo: False                               # transformed Bellman Operator

    # arguments for optimizer
    optimizer: adam
    schedule_lr: False
    actor_lr: 3.e-4
    q_lr: 3.e-4
    temp_lr: 3.e-4
    epsilon: 1.e-8
    # clip_norm: 10
    
    # arguments for PER
    # per_alpha: 0.5
    # per_epsilon: 1.e-4

replay:
    type: dual-uniform                      # proportional or uniform
    # arguments for PER
    # beta0: 0.4
    # beta_steps: 5e4
    # to_update_top_priority: False

    # hacking
    # normalize_reward: True
    # reward_scale: 5
    # reward_clip: 10

    # arguments for dual replay
    cap_frac: .25
    bs_frac: .5

    # arguments for general replay
    n_steps: 1
    gamma: *gamma
    batch_size: 512
    min_size: 5e4
    capacity: 1e6
