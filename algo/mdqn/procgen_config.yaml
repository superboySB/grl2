---
env:
    name: procgen_coinrun
    distribution_mode: easy
    frame_skip: 1
    n_envs: &ne 64
    frame_stack: 1
    np_obs: True
    reward_scale: 1
    reward_clip: 10

model:
    encoder:
        cnn_name: impala
        cnn_out_size: null
    q:
        units_list: [512]
        kernel_initializer: glorot_uniform
        activation: relu
        layer_type: dense
        duel: False

agent:
    algorithm: &algo dqn
    replay_type: &replay per
    gamma: &gamma 0.99
    precision: &prec 32
    batch_size: &bs 64

    schedule_act_eps: True
    act_eps_type: apex
    act_eps: .3
    eval_act_eps: 0

    tau: .003
    alpha: .9
    clip_logpi_min: -1

    MAX_STEPS: 8e6      # maximum training frames
    TRAIN_PERIOD: 16     # #frames
    EVAL_PERIOD: 5e4
    LOG_PERIOD: 5e4
    N_UPDATES: 1
    RECORD: False

    # model path: root_dir/model_name/models
    # tensorboard path: root_dir/model_name/logs
    # the following names are just examples; they will be reset in our training process
    root_dir: *algo                         # root path for tensorboard logs
    model_name: *algo

    loss_type: huber
    target_update_period: 2000  # trainning step
    tbo: False                              # transformed Bellman Operator
    
    # arguments for optimizer
    optimizer: adam
    schedule_lr: False
    lr: 1e-4
    clip_norm: 0
    epsilon: 1.5e-4

    # arguments for PER
    per_alpha: .5
    per_epsilon: 1e-4

replay:
    replay_type: *replay
    precision: 32
    # arguments for PER
    beta0: 0
    to_update_top_priority: True

    # arguments for general replay
    n_steps: 3
    gamma: *gamma
    batch_size: *bs
    min_size: 5e4
    capacity: 1e5
    has_next_obs: False
