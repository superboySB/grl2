---
algorithm: &algo zero
name: zero

precision: 32

# model path: root_dir/model_name/name
# tensorboard path: root_dir/model_name/logs
# the following names are just examples; they will be re-specified in the entry point
root_dir: *algo
model_name: *algo

routine:
    algorithm: *algo

    MAX_STEPS: 3e6
    n_steps: &nsteps 5
    LOG_PERIOD: 5e4
    EVAL_PERIOD: 5e4

    RECORD_VIDEO: False
    N_EVAL_EPISODES: 1

    update_obs_rms_at_execution: &uorae False

env:
    env_name: &env_name HalfCheetah-v4
    n_runners: &nrunners 4
    n_envs: &nenvs 4
    seed: 0
    reward_min: null
    reward_max: null
    timeout_done: False
    bound_method: clip
    clip_sample_action: False
    action_low: null
    action_high: null
    to_rescale: True

agent: {}

strategy:
    train_loop:
        use_dataset: &dataset False
        n_epochs: &nepochs 1
        n_mbs: &nmbs 1
        n_aux_epochs: &naepochs 9
        n_pi: &npi 16
        n_segs: &nsegs 16
        n_aux_mbs_per_seg: &nambs 2
        max_kl: 0            # early stop when max_kl is violated. 0 or null suggests unbound

        # (once reuse null)
        # "once" updates values at the end of each epoch
        # "reuse" updates values using value from train which is staler than once
        # null doesn't update values.
        value_update: null

model:
    rnn_type: &rnn null
    sample_size: *nsteps

    encoder: 
        nn_id: null
    rnn:
        nn_id: *rnn
        units: 64
        kernel_initializer: orthogonal
        recurrent_initializer: orthogonal
        use_ln: True
    policy:
        nn_id: policy
        units_list: [64, 64]
        kernel_initializer: orthogonal
        activation: tanh
        norm: null
        eval_act_temp: 1
        out_gain: .01
        init_std: .6065
        out_act: null
    value:
        nn_id: value
        units_list: [64, 64]
        kernel_initializer: orthogonal
        activation: tanh
        norm: null

loss:
    # arguments for loss
    pg_coef: 1
    entropy_coef: .01
    gamma: .99
    lam: .95
    c_clip: 1
    rho_clip: 1
    life_mask: False

    value_loss: mse
    value_coef: 1
    life_mask: False

trainer:
    algorithm: *algo
    sample_size: *nsteps         # BPTT length
    store_state: True

    optimizer:
        opt_name: rmsprop
        schedule_lr: False
        lr: 7e-4
        clip_norm: .5
        epsilon: 1e-5

actor:
    update_obs_rms_at_execution: *uorae
    update_obs_at_execution: False
    rms:
        obs_names: [obs]
        obs_normalized_axis: [0, 1, 2]
        reward_normalized_axis: [0, 1, 2]
        normalize_obs: True
        obs_clip: 10
        normalize_reward: True
        update_reward_rms_in_time: False
        gamma: &gamma .99

buffer:
    type: ppo
    use_dataset: *dataset

    adv_type: gae     # nae or gae
    n_runners: *nrunners
    n_envs: *nenvs
    n_steps: *nsteps
    sample_size: *nsteps
    n_epochs: *nepochs
    n_mbs: *nmbs        # number of minibatches
    rnn_type: *rnn

    sample_keys: 
        - obs
        - action
        - reward
        - discount
        - reset
        - mu_prob
        - mu_mean
        - mu_std
        - mask
        - h
        - c
