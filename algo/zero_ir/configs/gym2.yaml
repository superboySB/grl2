---
algorithm: &algo zero
name: zero

precision: 32

# model path: root_dir/model_name/name
# tensorboard path: root_dir/model_name/logs
# the following names are just examples; they will be re-specified in the entry point
root_dir: *algo
model_name: *algo

routine:
    algorithm: *algo

    MAX_STEPS: 1e7
    n_steps: &nsteps 5
    LOG_PERIOD: 1e5
    EVAL_PERIOD: False

    RECORD_VIDEO: True
    N_EVAL_EPISODES: 1
    size: [256, 256]

env:
    env_name: &env_name HalfCheetah-v4
    n_runners: &nrunners 4
    n_envs: &nenvs 4
    seed: 0
    reward_min: null
    reward_max: null
    reward_scale: .1
    timeout_done: &td False
    bound_method: clip
    clip_sample_action: False
    action_low: null
    action_high: null
    to_rescale: True
    to_multi_agent: True

agent: {}

strategy:
    train_loop:
        use_dataset: &dataset False
        n_epochs: &nepochs 1
        n_mbs: &nmbs 1
        K: &K null
        L: &L 0
        extra_meta_step: &ems 1 # 0/1

model:
    rnn_type: &rnn null
    sample_size: *nsteps
    K: *K
    L: *L
    extra_meta_step: *ems

    encoder: 
        nn_id: null
    rnn:
        nn_id: *rnn
        units: 64
        kernel_initializer: orthogonal
        recurrent_initializer: orthogonal
        use_ln: True
    policy:
        nn_id: policy
        units_list: [64, 64]
        kernel_initializer: orthogonal
        activation: tanh
        norm: null
        eval_act_temp: 1
        out_gain: .01
        init_std: .6065
        out_act: tanh
    value:
        nn_id: value
        units_list: [64, 64]
        kernel_initializer: orthogonal
        activation: tanh
        norm: null
    embed: 
        nn_id: hpembed
        out_size: 16
    meta:
        nn_id: meta
        pg_coef:
            outer: 1
            default: 1
            init: null
            act: sigmoid
        entropy_coef:
            outer: 0
            default: 0
            init: null
            act: sigmoid
        value_coef:
            outer: 1
            default: 1
            scale: 1
            bias: 0
            init: null
            act: sigmoid
        gamma: 
            outer: &gamma .99
            default: .99
            scale: 1
            bias: 0
            init: 4.5
            act: sigmoid
        lam:
            outer: .95
            default: .95
            scale: 1
            bias: 0
            init: 3
            act: sigmoid

loss:
    rl:
        # arguments for value target and advantage
        target_type: gae
        c_clip: 1
        rho_clip: 1
        adv_type: vtrace
        norm_adv: False

        # arguments for policy optimization
        pg_type: ppo
        ppo_clip_range: .2
        use_dice: False
        dice_axis: null
        dice_lam: 1
        kl: reverse
        kl_coef: 1

        # arguments for value learning
        value_loss: mse
        value_clip_range: .2
        life_mask: False
    meta:
        # arguments for value target and advantage
        target_type: gae
        c_clip: 1
        rho_clip: 1
        adv_type: vtrace
        norm_adv: False

        # arguments for policy optimization
        pg_type: ppo
        ppo_clip_range: .2
        use_dice: False
        dice_axis: null
        dice_lam: 1
        kl: reverse
        kl_coef: 1

        # arguments for value learning
        value_loss: mse
        value_clip_range: .2
        life_mask: False

trainer:
    algorithm: *algo
    sample_size: *nsteps         # BPTT length
    timeout_done: *td
    meta_type: plain
    K: *K
    L: *L
    extra_meta_step: *ems
    store_state: True
    n_epochs: 1

    optimizer:
        opt_name: rmsprop
        schedule_lr: False
        lr: 7e-4
        rho: .99
        clip_norm: .5
        epsilon: 1e-5
    meta_opt:
        opt_name: adam
        schedule_lr: False
        lr: 1e-3
        clip_norm: .5
        epsilon: 1e-4

actor:
    update_obs_rms_at_execution: False
    update_obs_at_execution: False
    rms:
        obs_names: [obs]
        obs_normalized_axis: [0, 1, 2]
        reward_normalized_axis: [0, 1, 2]
        normalize_obs: True
        obs_clip: 10
        normalize_reward: False
        update_reward_rms_in_time: False
        gamma: *gamma

buffer:
    type: ppo
    use_dataset: *dataset

    n_runners: *nrunners
    n_envs: *nenvs
    n_steps: *nsteps
    sample_size: *nsteps
    queue_size: 2
    K: *K
    L: *L
    extra_meta_step: *ems
    timeout_done: *td
    rnn_type: *rnn

    sample_keys: 
        - obs
        - next_obs
        - action
        - value
        - reward
        - discount
        - reset
        - mu_logprob
        - mu_mean
        - mu_std
        - mask
        - h
        - c
