---
env:
    name: dmc_walker_walk
    video_path: video
    log_video: False
    n_workers: 1
    n_envs: 1
    log_episode: True
    auto_reset: True
    n_ar: 2
    max_episode_steps: 1000
    precision: &prec 32
model:
    encoder:
        has_cnn: True
        # units_list: [256]
        # activation: elu
    rssm:
        stoch_size: 30
        deter_size: 200
        hidden_size: 200
        activation: elu
    reward:
        units_list: [400, 400]
        activation: elu
    actor:
        units_list: [400, 400, 400, 400]
        activation: elu
        init_std: 5
        min_std: 1.e-4
        mean_scale: 5
    value:
        units_list: [400, 400, 400]
        activation: elu
    decoder:
        has_cnn: True
        # units_list: [256]
        # activation: elu
    # discount:
    #     units_list: [400, 400, 400]
    #     activation: elu
agent:
    algorithm: &algo dreamer
    polyak: .995
    precision: *prec
    batch_size: &bs 50
    batch_length: &bl 50

    MAX_STEPS: 5.e+6
    TIME_INTERVAL: 10
    LOG_INTERVAL: 3000
    TRAIN_INTERVAL: 1000
    N_UPDATES: 100
    TIMER: True

    # model
    free_nats: 3.
    kl_scale: 1.
    discount_scale: 10.
    # behavior
    horizon: 15
    gamma: &gamma 0.99
    lambda: .95
    act_epsilon: .3


    # model path: root_dir/model_name/models
    # tensorboard path: root_dir/model_name/logs
    # the following names are just examples; they will be reset in our training process
    root_dir: *algo                         # root path for tensorboard logs
    model_name: *algo

    # arguments for optimizer
    optimizer: adam
    clip_norm: 100.
    weight_decay: 0.
    model_lr: 6.e-4
    actor_lr: 8.e-5
    value_lr: 8.e-5
    epsilon: 1.e-8

replay:
    type: episodic                      # proportional or uniform

    # arguments for general replay
    batch_size: *bs
    batch_length: *bl
    max_episodes: 500
    min_episodes: 5