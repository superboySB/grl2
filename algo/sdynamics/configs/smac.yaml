---
algorithm: &algo sdynamics
name: sdynamics
info: sdynamics

precision: 32

# model path: root_dir/model_name/name
# tensorboard path: root_dir/model_name/logs
# the following names are just examples; they will be re-specified in the entry point
root_dir: *algo
model_name: *algo

routine:
    algorithm: *algo

    MAX_STEPS: 3e7
    n_steps: &nsteps 10
    LOG_PERIOD: 2e5

    n_envs: &nenvs 4

    model_warm_up: True
    model_warm_up_steps: 5e4

env:
    env_name: &env_name smac-5m_vs_6m
    n_runners: &nrunners 1
    n_envs: *nenvs
    timeout_done: &td False
    env_args:
        obs_all_health: True
        obs_own_health: True
        obs_last_action: True   # Different from PyMARL, we decide it to be True by default here.
        obs_pathing_grid: False
        obs_terrain_height: False
        obs_instead_of_state: False
        obs_timestep_number: False
        obs_agent_id: True  # We align it to the environment in HAPPO or MAPPO
        state_pathing_grid: False
        state_terrain_height: False
        state_last_action: True
        state_timestep_number: False
        state_agent_id: True # We align it to the environment in HAPPO or MAPPO
        use_state_agent: True
        add_center_xy: True
        add_distance_state: False
        add_xy_state: False
        add_visible_state: False
        add_enemy_action_state: False
        use_sample_mask: True
        use_action_mask: True
        sample_mask_at_done: 0
    uid2aid: [0, 1, 2, 3, 4]

agent: {}

monitor:
    use_tensorboard: True

strategy:
    algorithm: *algo
    train_loop:
        ergodic: True
        samples_per_epochs: 5e4
        n_valid_samples: 1e4
        n_epochs: &nepochs 5

model:
    aid: 0
    n_elites: 5
    global_state_type: obs
    rn_std: .1
    model_norm_obs: &obs_norm True
    deterministic_trans: False
    model_loss_type: &mlt mbpo

    emodels:
        nn_id: emodels
        n_models: &n 1
        units_list: [200, 200, 200, 200]
        activation: relu
        norm: null
        out_type: continuous
        out_config:
            max_logvar: .5
            min_logvar: -10
    reward:
        nn_id: reward
        out_size: 1
        units_list: [200, 200, 200]
        activation: relu
        norm: null
        out_scale: .01
        use_next_obs: False
        balance_dimension: False
        obs_embed: 128
        action_embed: 64
    discount:
        nn_id: discount
        out_size: 1
        units_list: [200, 200]
        activation: relu
        norm: null
        out_scale: .01

loss:
    model_loss_type: *mlt
    n_models: *n
    model_norm_obs: *obs_norm

    model_coef: 1
    reward_coef: 1
    discount_coef: 1

trainer:
    algorithm: *algo
    aid: 0
    trust_threshold: null
    timeout_done: *td
    model_norm_obs: *obs_norm

    model_opt:
        opt_name: adam
        lr: 5e-4
        clip_norm: 10
        eps: 1e-5

actor: {}


buffer:
    type: uniform

    model_use_state: True
    model_norm_obs: *obs_norm
    n_runners: *nrunners
    n_envs: *nenvs
    max_size: 5e4
    min_size: 1e3
    batch_size: 256
    sample_size: 1

    max_steps: 1

    sample_keys: 
        - obs
        - action
        - reward
        - discount
        - reset
