#!/bin/bash

# brew install ffmpeg
export PYTHONPATH=.

algos=(zero)
suite=overcooked
envs=(
    # asymmetric_advantages 
    # cramped_room 
    # counter_circuit_o_1order
    coordination_ring 
    forced_coordination 
)
config=overcooked
args1=(50 100)
args2=(8e-4 1e-3)
args3=(.01 .1)
date=$(date +"%m%d")
info=""
ld="${suite}-logs"
gpus=$(nvidia-smi -L | wc -l)
# for x in $(seq 1 1); do
#     shift
# done

if [ -z "$info" ]; then
    n=$date
else
    n="$date-$info"
fi

gs=$1
i=0
if [ "$gs" = "gs" ]; then
    shift
    cmdkws=""
    for item in $@; do
        if [ "$cmdkws" = "" ]; then
            cmdkws="$item"
        else
            cmdkws="$cmdkws-$item"
        fi
    done
    echo "grid search"
    for e in "${envs[@]}"; do
        for a in "${algos[@]}"; do
            for a1 in "${args1[@]}"; do
                for a2 in "${args2[@]}"; do
                    for a3 in "${args3[@]}"; do
                        for s in {1..2}; do
                            # if [ "$a1" -eq 1 ] && [ "$a3" = "last" ]; then
                            #     break
                            # fi
                            kw1="n_steps=$a1"
                            kw2="lr=$a2"
                            kw3="entropy_coef=$a3"
                            if [ -z != $kw2 ]; then
                                kwstr="$kw1-$kw2-$kw3"
                                kws="$kw1 $kw2 $kw3"
                            else
                                kwstr="$kw1"
                                kws="$kw1"
                            fi
                            if [ "$cmdkws" != "" ]; then
                                kwstr="$cmdkws-$kwstr"
                                kws="$@ $kws"
                            fi
                            # kws="$@"
                            env="${suite}-${e}"
                            if [[ "$OSTYPE" == 'linux-gnu'* ]]; then
                                gpu=$(($i % $gpus))
                                # dir="$ld/$env/$a/$n-$kwstr/seed=$s"
                                # py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld --gpu $gpu -n $n -s $s -kw $kws -i $info 2> ${dir}/err.txt | tee -a ${dir}/out.txt > /dev/null &"
                                py_script="python run/train.py -a ${a} ${a} -e $env -c $config -ld $ld -n $n -s $s --gpu $gpu -kw $kws -i $info -na 2 &"
                            else
                                py_script="python run/train.py -a ${a} ${a} -e $env -c $config -ld $ld -n $n -s $s -kw $kws -i $info -na 2 &"
                            fi
                            echo $py_script
                            eval $py_script
                            ((i=(i+1) ))
                        done
                    done
                    wait
                    ps -ef | grep "run/train.py" | grep -v grep | awk '{print $2}' | xargs kill -9
                    ps -ef | grep "ray" | grep -v grep | awk '{print $2}' | xargs kill -9
                done
                # wait
                # ps -ef | grep "run/train.py" | grep -v grep | awk '{print $2}' | xargs kill -9
                # ps -ef | grep "ray" | grep -v grep | awk '{print $2}' | xargs kill -9
            done
        done
    done
else
    echo "plain"
    kw1=""
    kwstr="$kw1"
    kws="$@"
    for item in $@; do
        if [ -z != $kwstr ]; then
            kwstr="$kwstr-$item"
        else
            kwstr="$item"
        fi
    done

    for e in "${envs[@]}"; do
        for a in "${algos[@]}"; do
            for s in {1..2}; do
                env="${suite}-${e}"
                # if [ 0 != $# ]; then
                #     dir="$ld/$env/$a/$n-$kwstr/seed=$s"
                # else
                #     dir="$ld/$env/$a/$n/seed=$s"
                # fi
                # gpu=1
                # py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld --gpu $gpu -n $n -s $s -kw $kws 2> ${dir}/err.txt | tee -a ${dir}/out.txt > /dev/null &"
                if [[ "$OSTYPE" == 'linux-gnu'* ]]; then
                    gpu=$(($i % $gpus))
                    py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -s $s --gpu $gpu -kw $kws -na 2 &"
                else
                    py_script="python run/train.py -a ${a} -e $env -c $config -ld $ld -n $n -s $s -kw $kws -na 2 &"
                fi
                echo $py_script
                eval $py_script
                ((i=(i+1) ))
            done
        done
    done
fi
wait
echo "Script completed"
