#!/bin/zsh

source activate grl

algos=(
    sync2-zero
)
suite=smac
envs=(
    # 3s5z_vs_3s6z
    # 5m_vs_6m
    # MMM2
    # 6h_vs_8z
    $1
)
config=smac
seeds=(0 1 2)
args1=(1)
args2=(exp)
args3=(1)
args4=(1)
date=$(date +"%m%d")


i=0
j=1
for e in "${envs[@]}"; do
    for a in "${algos[@]}"; do
        for a1 in "${args1[@]}"; do
            for a2 in "${args2[@]}"; do
                for a3 in "${args3[@]}"; do
                    for a4 in "${args4[@]}"; do
                        for seed in "${seeds[@]}"; do
                            # if [[ $a2 == $a3 ]]
                            # then continue
                            # fi
                            # sed -e "s/KI/${a2}/g" \
                            #     algo/ppo/${suite}_template.yaml > algo/ppo/${suite}_config.yaml
                            # dir="logs/${suite}_${e}/${a}"
                            kw1="aux_l2_coef=$a1"
                            kw2="target_type=$a2"
                            kw3="exp_lower_clip=$a3"
                            kw4="exp_upper_clip=$a4"
                            kws="$kw1-$kw2-$kw3-$kw4"
                            env="${suite}-${e}"
                            n="$date"
                            ld="logs-$suite"
                            dir="$ld/$env/$a/$n-$kws-max_steps_per_iteration=$2-seed=$seed"
                            mkdir -p $dir
                            # py_script="python run/train.py -a ${a} -e $env -c $config $@ >& ${dir}/outputs.txt"
                            # py_script="train ${a} -e ${suite}_${e} -kw distribution_mode=hard >& ${dir}/outputs.txt"
                            # py_script="python run/train.py -a ${a} -e $env -c $config -kw max_steps_per_iteration=$2 -ld $ld --gpu $3 -n $n -s $seed &"
                            py_script="python run/train.py -a ${a} -e $env -c $config -kw $kw1 $kw2 $kw3 $kw4 max_steps_per_iteration=$2 -ld $ld --gpu $3 -n $n -s $seed | tee ${dir}/outputs.txt &"
                            echo $py_script
                            eval $py_script
                            ((i=(i+2) % 8))
                            ((j=(j+2) % 8))
                            sleep 3
                            # last_dir=$(ls -td ${dir}/* | grep -v txt | head -n 1)
                            # echo $last_dir
                            # mv_script="mv ${dir}/outputs.txt ${last_dir}/outputs.txt"
                            # echo $mv_script
                            # eval $mv_script
                        done
                    done
                done
            done
        done
    done
done
